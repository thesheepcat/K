/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_address_free: (a: number, b: number) => void;
export const address_constructor: (a: number, b: number) => number;
export const address_validate: (a: number, b: number) => number;
export const address_toString: (a: number, b: number) => void;
export const address_version: (a: number, b: number) => void;
export const address_prefix: (a: number, b: number) => void;
export const address_set_setPrefix: (a: number, b: number, c: number) => void;
export const address_payload: (a: number, b: number) => void;
export const address_short: (a: number, b: number, c: number) => void;
export const __wbg_mnemonic_free: (a: number, b: number) => void;
export const mnemonic_constructor: (a: number, b: number, c: number, d: number) => void;
export const mnemonic_validate: (a: number, b: number, c: number) => number;
export const mnemonic_entropy: (a: number, b: number) => void;
export const mnemonic_set_entropy: (a: number, b: number, c: number) => void;
export const mnemonic_random: (a: number, b: number) => void;
export const mnemonic_phrase: (a: number, b: number) => void;
export const mnemonic_set_phrase: (a: number, b: number, c: number) => void;
export const mnemonic_toSeed: (a: number, b: number, c: number, d: number) => void;
export const __wbg_transactionoutpoint_free: (a: number, b: number) => void;
export const transactionoutpoint_ctor: (a: number, b: number) => number;
export const transactionoutpoint_getId: (a: number, b: number) => void;
export const transactionoutpoint_transactionId: (a: number, b: number) => void;
export const transactionoutpoint_index: (a: number) => number;
export const __wbg_transaction_free: (a: number, b: number) => void;
export const transaction_is_coinbase: (a: number) => number;
export const transaction_finalize: (a: number, b: number) => void;
export const transaction_id: (a: number, b: number) => void;
export const transaction_constructor: (a: number, b: number) => void;
export const transaction_get_inputs_as_js_array: (a: number) => number;
export const transaction_addresses: (a: number, b: number, c: number) => void;
export const transaction_set_inputs_from_js_array: (a: number, b: number) => void;
export const transaction_get_outputs_as_js_array: (a: number) => number;
export const transaction_set_outputs_from_js_array: (a: number, b: number) => void;
export const transaction_version: (a: number) => number;
export const transaction_set_version: (a: number, b: number) => void;
export const transaction_lockTime: (a: number) => bigint;
export const transaction_set_lockTime: (a: number, b: bigint) => void;
export const transaction_gas: (a: number) => bigint;
export const transaction_set_gas: (a: number, b: bigint) => void;
export const transaction_get_subnetwork_id_as_hex: (a: number, b: number) => void;
export const transaction_set_subnetwork_id_from_js_value: (a: number, b: number) => void;
export const transaction_get_payload_as_hex_string: (a: number, b: number) => void;
export const transaction_set_payload_from_js_value: (a: number, b: number) => void;
export const transaction_get_mass: (a: number) => bigint;
export const transaction_set_mass: (a: number, b: bigint) => void;
export const transaction_serializeToObject: (a: number, b: number) => void;
export const transaction_serializeToJSON: (a: number, b: number) => void;
export const transaction_serializeToSafeJSON: (a: number, b: number) => void;
export const transaction_deserializeFromObject: (a: number, b: number) => void;
export const transaction_deserializeFromJSON: (a: number, b: number, c: number) => void;
export const transaction_deserializeFromSafeJSON: (a: number, b: number, c: number) => void;
export const isScriptPayToScriptHash: (a: number, b: number) => void;
export const isScriptPayToPubkeyECDSA: (a: number, b: number) => void;
export const isScriptPayToPubkey: (a: number, b: number) => void;
export const addressFromScriptPublicKey: (a: number, b: number, c: number) => void;
export const payToScriptHashSignatureScript: (a: number, b: number, c: number) => void;
export const payToScriptHashScript: (a: number, b: number) => void;
export const payToAddressScript: (a: number, b: number) => void;
export const transactionsigninghashecdsa_new: () => number;
export const transactionsigninghashecdsa_update: (a: number, b: number, c: number) => void;
export const transactionsigninghashecdsa_finalize: (a: number, b: number) => void;
export const __wbg_transactionsigninghashecdsa_free: (a: number, b: number) => void;
export const transactionsigninghash_new: () => number;
export const transactionsigninghash_update: (a: number, b: number, c: number) => void;
export const transactionsigninghash_finalize: (a: number, b: number) => void;
export const __wbg_transactionsigninghash_free: (a: number, b: number) => void;
export const header_constructor: (a: number, b: number) => void;
export const header_finalize: (a: number, b: number) => void;
export const header_asJSON: (a: number, b: number) => void;
export const header_get_version: (a: number) => number;
export const header_set_version: (a: number, b: number) => void;
export const header_get_timestamp: (a: number) => bigint;
export const header_set_timestamp: (a: number, b: bigint) => void;
export const header_bits: (a: number) => number;
export const header_set_bits: (a: number, b: number) => void;
export const header_nonce: (a: number) => bigint;
export const header_set_nonce: (a: number, b: bigint) => void;
export const header_daa_score: (a: number) => bigint;
export const header_set_daa_score: (a: number, b: bigint) => void;
export const header_blue_score: (a: number) => bigint;
export const header_set_blue_score: (a: number, b: bigint) => void;
export const header_get_hash_as_hex: (a: number, b: number) => void;
export const header_get_hash_merkle_root_as_hex: (a: number, b: number) => void;
export const header_set_hash_merkle_root_from_js_value: (a: number, b: number) => void;
export const header_get_accepted_id_merkle_root_as_hex: (a: number, b: number) => void;
export const header_set_accepted_id_merkle_root_from_js_value: (a: number, b: number) => void;
export const header_get_utxo_commitment_as_hex: (a: number, b: number) => void;
export const header_set_utxo_commitment_from_js_value: (a: number, b: number) => void;
export const header_get_pruning_point_as_hex: (a: number, b: number) => void;
export const header_set_pruning_point_from_js_value: (a: number, b: number) => void;
export const header_get_parents_by_level_as_js_value: (a: number) => number;
export const header_set_parents_by_level_from_js_value: (a: number, b: number) => void;
export const header_blue_work: (a: number) => number;
export const header_getBlueWorkAsHex: (a: number, b: number) => void;
export const header_set_blue_work_from_js_value: (a: number, b: number) => void;
export const __wbg_header_free: (a: number, b: number) => void;
export const __wbg_utxoentry_free: (a: number, b: number) => void;
export const __wbg_get_utxoentry_address: (a: number) => number;
export const __wbg_set_utxoentry_address: (a: number, b: number) => void;
export const __wbg_get_utxoentry_outpoint: (a: number) => number;
export const __wbg_set_utxoentry_outpoint: (a: number, b: number) => void;
export const __wbg_get_utxoentry_amount: (a: number) => bigint;
export const __wbg_set_utxoentry_amount: (a: number, b: bigint) => void;
export const __wbg_get_utxoentry_scriptPublicKey: (a: number) => number;
export const __wbg_set_utxoentry_scriptPublicKey: (a: number, b: number) => void;
export const __wbg_get_utxoentry_blockDaaScore: (a: number) => bigint;
export const __wbg_set_utxoentry_blockDaaScore: (a: number, b: bigint) => void;
export const __wbg_get_utxoentry_isCoinbase: (a: number) => number;
export const __wbg_set_utxoentry_isCoinbase: (a: number, b: number) => void;
export const utxoentry_toString: (a: number, b: number) => void;
export const __wbg_utxoentryreference_free: (a: number, b: number) => void;
export const utxoentryreference_toString: (a: number, b: number) => void;
export const utxoentryreference_entry: (a: number) => number;
export const utxoentryreference_outpoint: (a: number) => number;
export const utxoentryreference_address: (a: number) => number;
export const utxoentryreference_amount: (a: number) => bigint;
export const utxoentryreference_isCoinbase: (a: number) => number;
export const utxoentryreference_blockDaaScore: (a: number) => bigint;
export const utxoentryreference_scriptPublicKey: (a: number) => number;
export const __wbg_utxoentries_free: (a: number, b: number) => void;
export const utxoentries_js_ctor: (a: number, b: number) => void;
export const utxoentries_get_items_as_js_array: (a: number) => number;
export const utxoentries_set_items_from_js_array: (a: number, b: number) => void;
export const utxoentries_sort: (a: number) => void;
export const utxoentries_amount: (a: number) => bigint;
export const __wbg_transactionoutput_free: (a: number, b: number) => void;
export const transactionoutput_ctor: (a: bigint, b: number) => number;
export const transactionoutput_value: (a: number) => bigint;
export const transactionoutput_set_value: (a: number, b: bigint) => void;
export const transactionoutput_scriptPublicKey: (a: number) => number;
export const transactionoutput_set_scriptPublicKey: (a: number, b: number) => void;
export const __wbg_transactioninput_free: (a: number, b: number) => void;
export const transactioninput_constructor: (a: number, b: number) => void;
export const transactioninput_get_previous_outpoint: (a: number) => number;
export const transactioninput_set_previous_outpoint: (a: number, b: number, c: number) => void;
export const transactioninput_get_signature_script_as_hex: (a: number, b: number) => void;
export const transactioninput_set_signature_script_from_js_value: (a: number, b: number, c: number) => void;
export const transactioninput_get_sequence: (a: number) => bigint;
export const transactioninput_set_sequence: (a: number, b: bigint) => void;
export const transactioninput_get_sig_op_count: (a: number) => number;
export const transactioninput_set_sig_op_count: (a: number, b: number) => void;
export const transactioninput_get_utxo: (a: number) => number;
export const __wbg_networkid_free: (a: number, b: number) => void;
export const __wbg_get_networkid_type: (a: number) => number;
export const __wbg_set_networkid_type: (a: number, b: number) => void;
export const __wbg_get_networkid_suffix: (a: number) => number;
export const __wbg_set_networkid_suffix: (a: number, b: number) => void;
export const networkid_ctor: (a: number, b: number) => void;
export const networkid_id: (a: number, b: number) => void;
export const networkid_addressPrefix: (a: number, b: number) => void;
export const networkid_toString: (a: number, b: number) => void;
export const __wbg_transactionutxoentry_free: (a: number, b: number) => void;
export const __wbg_get_transactionutxoentry_amount: (a: number) => bigint;
export const __wbg_set_transactionutxoentry_amount: (a: number, b: bigint) => void;
export const __wbg_get_transactionutxoentry_scriptPublicKey: (a: number) => number;
export const __wbg_set_transactionutxoentry_scriptPublicKey: (a: number, b: number) => void;
export const __wbg_get_transactionutxoentry_blockDaaScore: (a: number) => bigint;
export const __wbg_set_transactionutxoentry_blockDaaScore: (a: number, b: bigint) => void;
export const __wbg_get_transactionutxoentry_isCoinbase: (a: number) => number;
export const __wbg_set_transactionutxoentry_isCoinbase: (a: number, b: number) => void;
export const __wbg_sighashtype_free: (a: number, b: number) => void;
export const __wbg_scriptpublickey_free: (a: number, b: number) => void;
export const __wbg_get_scriptpublickey_version: (a: number) => number;
export const __wbg_set_scriptpublickey_version: (a: number, b: number) => void;
export const scriptpublickey_constructor: (a: number, b: number, c: number) => void;
export const scriptpublickey_script_as_hex: (a: number, b: number) => void;
export const __wbg_hash_free: (a: number, b: number) => void;
export const hash_constructor: (a: number, b: number) => number;
export const hash_toString: (a: number, b: number) => void;
export const __wbg_pow_free: (a: number, b: number) => void;
export const pow_new: (a: number, b: number, c: number, d: bigint) => void;
export const pow_target: (a: number, b: number) => void;
export const pow_checkWork: (a: number, b: number, c: bigint) => void;
export const pow_get_pre_pow_hash: (a: number, b: number) => void;
export const pow_fromRaw: (a: number, b: number, c: number, d: bigint, e: number) => void;
export const calculateTarget: (a: number, b: number) => void;
export const scriptbuilder_new: () => number;
export const scriptbuilder_fromScript: (a: number, b: number) => void;
export const scriptbuilder_addOp: (a: number, b: number, c: number) => void;
export const scriptbuilder_addOps: (a: number, b: number, c: number) => void;
export const scriptbuilder_addData: (a: number, b: number, c: number) => void;
export const scriptbuilder_addI64: (a: number, b: number, c: bigint) => void;
export const scriptbuilder_addLockTime: (a: number, b: number, c: bigint) => void;
export const scriptbuilder_canonicalDataSize: (a: number, b: number) => void;
export const scriptbuilder_toString: (a: number) => number;
export const scriptbuilder_drain: (a: number) => number;
export const scriptbuilder_createPayToScriptHashScript: (a: number) => number;
export const scriptbuilder_encodePayToScriptHashSignatureScript: (a: number, b: number, c: number) => void;
export const scriptbuilder_hexView: (a: number, b: number, c: number) => void;
export const __wbg_scriptbuilder_free: (a: number, b: number) => void;
export const scriptbuilder_addSequence: (a: number, b: number, c: bigint) => void;
export const __wbg_accountkind_free: (a: number, b: number) => void;
export const accountkind_ctor: (a: number, b: number, c: number) => void;
export const accountkind_toString: (a: number, b: number) => void;
export const argon2sha256ivFromText: (a: number, b: number, c: number, d: number) => void;
export const argon2sha256ivFromBinary: (a: number, b: number, c: number) => void;
export const sha256dFromText: (a: number, b: number, c: number) => void;
export const sha256dFromBinary: (a: number, b: number) => void;
export const sha256FromText: (a: number, b: number, c: number) => void;
export const sha256FromBinary: (a: number, b: number) => void;
export const decryptXChaCha20Poly1305: (a: number, b: number, c: number, d: number, e: number) => void;
export const encryptXChaCha20Poly1305: (a: number, b: number, c: number, d: number, e: number) => void;
export const __wbg_storage_free: (a: number, b: number) => void;
export const storage_filename: (a: number, b: number) => void;
export const utxocontext_ctor: (a: number, b: number) => void;
export const utxocontext_trackAddresses: (a: number, b: number, c: number) => number;
export const utxocontext_unregisterAddresses: (a: number, b: number) => number;
export const utxocontext_clear: (a: number) => number;
export const utxocontext_isActive: (a: number) => number;
export const utxocontext_getMatureRange: (a: number, b: number, c: number, d: number) => void;
export const utxocontext_matureLength: (a: number) => number;
export const utxocontext_getPending: (a: number, b: number) => void;
export const utxocontext_balance: (a: number) => number;
export const utxocontext_balanceStrings: (a: number, b: number) => void;
export const __wbg_utxocontext_free: (a: number, b: number) => void;
export const calculateStorageMass: (a: number, b: number, c: number, d: number) => void;
export const calculateTransactionFee: (a: number, b: number, c: number, d: number) => void;
export const updateTransactionMass: (a: number, b: number, c: number, d: number) => void;
export const calculateTransactionMass: (a: number, b: number, c: number, d: number) => void;
export const maximumStandardTransactionMass: () => bigint;
export const pendingtransaction_id: (a: number, b: number) => void;
export const pendingtransaction_paymentAmount: (a: number) => number;
export const pendingtransaction_changeAmount: (a: number) => number;
export const pendingtransaction_feeAmount: (a: number) => number;
export const pendingtransaction_mass: (a: number) => number;
export const pendingtransaction_minimumSignatures: (a: number) => number;
export const pendingtransaction_aggregateInputAmount: (a: number) => number;
export const pendingtransaction_aggregateOutputAmount: (a: number) => number;
export const pendingtransaction_type: (a: number, b: number) => void;
export const pendingtransaction_addresses: (a: number) => number;
export const pendingtransaction_getUtxoEntries: (a: number) => number;
export const pendingtransaction_createInputSignature: (a: number, b: number, c: number, d: number, e: number) => void;
export const pendingtransaction_fillInput: (a: number, b: number, c: number, d: number) => void;
export const pendingtransaction_signInput: (a: number, b: number, c: number, d: number, e: number) => void;
export const pendingtransaction_sign: (a: number, b: number, c: number, d: number) => void;
export const pendingtransaction_submit: (a: number, b: number) => number;
export const pendingtransaction_transaction: (a: number, b: number) => void;
export const pendingtransaction_serializeToObject: (a: number, b: number) => void;
export const pendingtransaction_serializeToJSON: (a: number, b: number) => void;
export const pendingtransaction_serializeToSafeJSON: (a: number, b: number) => void;
export const __wbg_pendingtransaction_free: (a: number, b: number) => void;
export const generator_ctor: (a: number, b: number) => void;
export const generator_next: (a: number) => number;
export const generator_estimate: (a: number) => number;
export const generator_summary: (a: number) => number;
export const __wbg_generator_free: (a: number, b: number) => void;
export const signScriptHash: (a: number, b: number, c: number) => void;
export const createInputSignature: (a: number, b: number, c: number, d: number, e: number) => void;
export const signTransaction: (a: number, b: number, c: number, d: number) => void;
export const createAddress: (a: number, b: number, c: number, d: number, e: number) => void;
export const createMultisigAddress: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const wallet_constructor: (a: number, b: number) => void;
export const wallet_rpc: (a: number) => number;
export const wallet_isOpen: (a: number) => number;
export const wallet_isSynced: (a: number) => number;
export const wallet_descriptor: (a: number) => number;
export const wallet_exists: (a: number, b: number, c: number) => number;
export const wallet_start: (a: number) => number;
export const wallet_stop: (a: number) => number;
export const wallet_connect: (a: number, b: number) => number;
export const wallet_disconnect: (a: number) => number;
export const wallet_addEventListener: (a: number, b: number, c: number, d: number) => void;
export const wallet_removeEventListener: (a: number, b: number, c: number, d: number) => void;
export const wallet_setNetworkId: (a: number, b: number, c: number) => void;
export const __wbg_wallet_free: (a: number, b: number) => void;
export const prvkeydatainfo_id: (a: number, b: number) => void;
export const prvkeydatainfo_name: (a: number) => number;
export const prvkeydatainfo_isEncrypted: (a: number) => number;
export const prvkeydatainfo_setName: (a: number, b: number, c: number, d: number) => void;
export const __wbg_prvkeydatainfo_free: (a: number, b: number) => void;
export const cryptobox_ctor: (a: number, b: number, c: number) => void;
export const cryptobox_publicKey: (a: number, b: number) => void;
export const cryptobox_encrypt: (a: number, b: number, c: number, d: number) => void;
export const cryptobox_decrypt: (a: number, b: number, c: number, d: number) => void;
export const __wbg_cryptobox_free: (a: number, b: number) => void;
export const cryptoboxpublickey_ctor: (a: number, b: number) => void;
export const cryptoboxpublickey_toString: (a: number, b: number) => void;
export const __wbg_cryptoboxpublickey_free: (a: number, b: number) => void;
export const cryptoboxprivatekey_ctor: (a: number, b: number) => void;
export const cryptoboxprivatekey_to_public_key: (a: number) => number;
export const __wbg_cryptoboxprivatekey_free: (a: number, b: number) => void;
export const utxoprocessor_addEventListener: (a: number, b: number, c: number, d: number) => void;
export const utxoprocessor_removeEventListener: (a: number, b: number, c: number, d: number) => void;
export const utxoprocessor_ctor: (a: number, b: number) => void;
export const utxoprocessor_start: (a: number) => number;
export const utxoprocessor_stop: (a: number) => number;
export const utxoprocessor_rpc: (a: number) => number;
export const utxoprocessor_networkId: (a: number, b: number) => void;
export const utxoprocessor_setNetworkId: (a: number, b: number, c: number) => void;
export const utxoprocessor_isActive: (a: number) => number;
export const utxoprocessor_setCoinbaseTransactionMaturityDAA: (a: number, b: number, c: bigint) => void;
export const utxoprocessor_setUserTransactionMaturityDAA: (a: number, b: number, c: bigint) => void;
export const __wbg_utxoprocessor_free: (a: number, b: number) => void;
export const getTransactionMaturityProgress: (a: number, b: number, c: number, d: number, e: number) => void;
export const getNetworkParams: (a: number, b: number) => void;
export const sompiToKaspaStringWithSuffix: (a: number, b: number, c: number) => void;
export const sompiToKaspaString: (a: number, b: number) => void;
export const kaspaToSompi: (a: number, b: number) => number;
export const __wbg_walletdescriptor_free: (a: number, b: number) => void;
export const __wbg_get_walletdescriptor_title: (a: number, b: number) => void;
export const __wbg_set_walletdescriptor_title: (a: number, b: number, c: number) => void;
export const __wbg_get_walletdescriptor_filename: (a: number, b: number) => void;
export const __wbg_set_walletdescriptor_filename: (a: number, b: number, c: number) => void;
export const __wbg_transactionrecordnotification_free: (a: number, b: number) => void;
export const __wbg_get_transactionrecordnotification_type: (a: number, b: number) => void;
export const __wbg_set_transactionrecordnotification_type: (a: number, b: number, c: number) => void;
export const __wbg_get_transactionrecordnotification_data: (a: number) => number;
export const __wbg_set_transactionrecordnotification_data: (a: number, b: number) => void;
export const __wbg_transactionrecord_free: (a: number, b: number) => void;
export const __wbg_get_transactionrecord_id: (a: number) => number;
export const __wbg_set_transactionrecord_id: (a: number, b: number) => void;
export const __wbg_get_transactionrecord_unixtimeMsec: (a: number, b: number) => void;
export const __wbg_set_transactionrecord_unixtimeMsec: (a: number, b: number, c: bigint) => void;
export const __wbg_get_transactionrecord_network: (a: number) => number;
export const __wbg_set_transactionrecord_network: (a: number, b: number) => void;
export const __wbg_get_transactionrecord_note: (a: number, b: number) => void;
export const __wbg_set_transactionrecord_note: (a: number, b: number, c: number) => void;
export const __wbg_get_transactionrecord_metadata: (a: number, b: number) => void;
export const __wbg_set_transactionrecord_metadata: (a: number, b: number, c: number) => void;
export const transactionrecord_maturityProgress: (a: number, b: number, c: number) => void;
export const transactionrecord_value: (a: number) => number;
export const transactionrecord_blockDaaScore: (a: number) => number;
export const transactionrecord_binding: (a: number) => number;
export const transactionrecord_data: (a: number) => number;
export const transactionrecord_type: (a: number, b: number) => void;
export const transactionrecord_hasAddress: (a: number, b: number) => number;
export const transactionrecord_serialize: (a: number) => number;
export const wallet_batch: (a: number, b: number) => number;
export const wallet_flush: (a: number, b: number) => number;
export const wallet_retainContext: (a: number, b: number) => number;
export const wallet_getStatus: (a: number, b: number) => number;
export const wallet_walletEnumerate: (a: number, b: number) => number;
export const wallet_walletCreate: (a: number, b: number) => number;
export const wallet_walletOpen: (a: number, b: number) => number;
export const wallet_walletReload: (a: number, b: number) => number;
export const wallet_walletClose: (a: number, b: number) => number;
export const wallet_walletChangeSecret: (a: number, b: number) => number;
export const wallet_walletExport: (a: number, b: number) => number;
export const wallet_walletImport: (a: number, b: number) => number;
export const wallet_prvKeyDataEnumerate: (a: number, b: number) => number;
export const wallet_prvKeyDataCreate: (a: number, b: number) => number;
export const wallet_prvKeyDataRemove: (a: number, b: number) => number;
export const wallet_prvKeyDataGet: (a: number, b: number) => number;
export const wallet_accountsEnumerate: (a: number, b: number) => number;
export const wallet_accountsRename: (a: number, b: number) => number;
export const wallet_accountsDiscovery: (a: number, b: number) => number;
export const wallet_accountsCreate: (a: number, b: number) => number;
export const wallet_accountsEnsureDefault: (a: number, b: number) => number;
export const wallet_accountsImport: (a: number, b: number) => number;
export const wallet_accountsActivate: (a: number, b: number) => number;
export const wallet_accountsDeactivate: (a: number, b: number) => number;
export const wallet_accountsGet: (a: number, b: number) => number;
export const wallet_accountsCreateNewAddress: (a: number, b: number) => number;
export const wallet_accountsSend: (a: number, b: number) => number;
export const wallet_accountsPskbSign: (a: number, b: number) => number;
export const wallet_accountsPskbBroadcast: (a: number, b: number) => number;
export const wallet_accountsPskbSend: (a: number, b: number) => number;
export const wallet_accountsGetUtxos: (a: number, b: number) => number;
export const wallet_accountsTransfer: (a: number, b: number) => number;
export const wallet_accountsEstimate: (a: number, b: number) => number;
export const wallet_transactionsDataGet: (a: number, b: number) => number;
export const wallet_transactionsReplaceNote: (a: number, b: number) => number;
export const wallet_transactionsReplaceMetadata: (a: number, b: number) => number;
export const wallet_addressBookEnumerate: (a: number, b: number) => number;
export const wallet_feeRateEstimate: (a: number, b: number) => number;
export const wallet_feeRatePollerEnable: (a: number, b: number) => number;
export const wallet_feeRatePollerDisable: (a: number, b: number) => number;
export const wallet_accountsCommitReveal: (a: number, b: number) => number;
export const wallet_accountsCommitRevealManual: (a: number, b: number) => number;
export const estimateTransactions: (a: number) => number;
export const createTransactions: (a: number) => number;
export const createTransaction: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const generatorsummary_networkType: (a: number) => number;
export const generatorsummary_utxos: (a: number) => number;
export const generatorsummary_fees: (a: number) => number;
export const generatorsummary_mass: (a: number) => number;
export const generatorsummary_transactions: (a: number) => number;
export const generatorsummary_finalAmount: (a: number) => number;
export const generatorsummary_finalTransactionId: (a: number, b: number) => void;
export const __wbg_generatorsummary_free: (a: number, b: number) => void;
export const balancestrings_mature: (a: number, b: number) => void;
export const balancestrings_pending: (a: number, b: number) => void;
export const __wbg_balancestrings_free: (a: number, b: number) => void;
export const balance_mature: (a: number) => number;
export const balance_pending: (a: number) => number;
export const balance_outgoing: (a: number) => number;
export const balance_toBalanceStrings: (a: number, b: number, c: number) => void;
export const __wbg_balance_free: (a: number, b: number) => void;
export const setDefaultStorageFolder: (a: number, b: number, c: number) => void;
export const setDefaultWalletFile: (a: number, b: number, c: number) => void;
export const verifyMessage: (a: number, b: number) => void;
export const signMessage: (a: number, b: number) => void;
export const __wbg_paymentoutput_free: (a: number, b: number) => void;
export const __wbg_get_paymentoutput_address: (a: number) => number;
export const __wbg_set_paymentoutput_address: (a: number, b: number) => void;
export const __wbg_get_paymentoutput_amount: (a: number) => bigint;
export const __wbg_set_paymentoutput_amount: (a: number, b: bigint) => void;
export const paymentoutput_new: (a: number, b: bigint) => number;
export const __wbg_paymentoutputs_free: (a: number, b: number) => void;
export const paymentoutputs_constructor: (a: number, b: number) => void;
export const __wbg_publickey_free: (a: number, b: number) => void;
export const publickey_try_new: (a: number, b: number, c: number) => void;
export const publickey_toString: (a: number, b: number) => void;
export const publickey_toAddress: (a: number, b: number, c: number) => void;
export const publickey_toAddressECDSA: (a: number, b: number, c: number) => void;
export const publickey_toXOnlyPublicKey: (a: number) => number;
export const publickey_fingerprint: (a: number) => number;
export const __wbg_xonlypublickey_free: (a: number, b: number) => void;
export const xonlypublickey_try_new: (a: number, b: number, c: number) => void;
export const xonlypublickey_toString: (a: number, b: number) => void;
export const xonlypublickey_toAddress: (a: number, b: number, c: number) => void;
export const xonlypublickey_toAddressECDSA: (a: number, b: number, c: number) => void;
export const xonlypublickey_fromAddress: (a: number, b: number) => void;
export const __wbg_privatekey_free: (a: number, b: number) => void;
export const privatekey_try_new: (a: number, b: number, c: number) => void;
export const privatekey_toString: (a: number, b: number) => void;
export const privatekey_toKeypair: (a: number, b: number) => void;
export const privatekey_toPublicKey: (a: number, b: number) => void;
export const privatekey_toAddress: (a: number, b: number, c: number) => void;
export const privatekey_toAddressECDSA: (a: number, b: number, c: number) => void;
export const __wbg_xprv_free: (a: number, b: number) => void;
export const xprv_try_new: (a: number, b: number) => void;
export const xprv_fromXPrv: (a: number, b: number, c: number) => void;
export const xprv_deriveChild: (a: number, b: number, c: number, d: number) => void;
export const xprv_derivePath: (a: number, b: number, c: number) => void;
export const xprv_intoString: (a: number, b: number, c: number, d: number) => void;
export const xprv_toString: (a: number, b: number) => void;
export const xprv_toXPub: (a: number, b: number) => void;
export const xprv_toPrivateKey: (a: number, b: number) => void;
export const xprv_privateKey: (a: number, b: number) => void;
export const xprv_depth: (a: number) => number;
export const xprv_parentFingerprint: (a: number, b: number) => void;
export const xprv_childNumber: (a: number) => number;
export const xprv_chainCode: (a: number, b: number) => void;
export const xprv_xprv: (a: number, b: number) => void;
export const __wbg_keypair_free: (a: number, b: number) => void;
export const keypair_get_public_key: (a: number, b: number) => void;
export const keypair_get_private_key: (a: number, b: number) => void;
export const keypair_get_xonly_public_key: (a: number) => number;
export const keypair_toAddress: (a: number, b: number, c: number) => void;
export const keypair_toAddressECDSA: (a: number, b: number, c: number) => void;
export const keypair_random: (a: number) => void;
export const keypair_fromPrivateKey: (a: number, b: number) => void;
export const __wbg_xpub_free: (a: number, b: number) => void;
export const xpub_try_new: (a: number, b: number, c: number) => void;
export const xpub_deriveChild: (a: number, b: number, c: number, d: number) => void;
export const xpub_derivePath: (a: number, b: number, c: number) => void;
export const xpub_intoString: (a: number, b: number, c: number, d: number) => void;
export const xpub_toPublicKey: (a: number) => number;
export const xpub_xpub: (a: number, b: number) => void;
export const xpub_depth: (a: number) => number;
export const xpub_parentFingerprint: (a: number, b: number) => void;
export const xpub_childNumber: (a: number) => number;
export const xpub_chainCode: (a: number, b: number) => void;
export const __wbg_publickeygenerator_free: (a: number, b: number) => void;
export const publickeygenerator_fromXPub: (a: number, b: number, c: number) => void;
export const publickeygenerator_fromMasterXPrv: (a: number, b: number, c: number, d: bigint, e: number) => void;
export const publickeygenerator_receivePubkeys: (a: number, b: number, c: number, d: number) => void;
export const publickeygenerator_receivePubkey: (a: number, b: number, c: number) => void;
export const publickeygenerator_receivePubkeysAsStrings: (a: number, b: number, c: number, d: number) => void;
export const publickeygenerator_receivePubkeyAsString: (a: number, b: number, c: number) => void;
export const publickeygenerator_receiveAddresses: (a: number, b: number, c: number, d: number, e: number) => void;
export const publickeygenerator_receiveAddress: (a: number, b: number, c: number, d: number) => void;
export const publickeygenerator_receiveAddressAsStrings: (a: number, b: number, c: number, d: number, e: number) => void;
export const publickeygenerator_receiveAddressAsString: (a: number, b: number, c: number, d: number) => void;
export const publickeygenerator_changePubkeys: (a: number, b: number, c: number, d: number) => void;
export const publickeygenerator_changePubkey: (a: number, b: number, c: number) => void;
export const publickeygenerator_changePubkeysAsStrings: (a: number, b: number, c: number, d: number) => void;
export const publickeygenerator_changePubkeyAsString: (a: number, b: number, c: number) => void;
export const publickeygenerator_changeAddresses: (a: number, b: number, c: number, d: number, e: number) => void;
export const publickeygenerator_changeAddress: (a: number, b: number, c: number, d: number) => void;
export const publickeygenerator_changeAddressAsStrings: (a: number, b: number, c: number, d: number, e: number) => void;
export const publickeygenerator_changeAddressAsString: (a: number, b: number, c: number, d: number) => void;
export const publickeygenerator_toString: (a: number, b: number) => void;
export const __wbg_privatekeygenerator_free: (a: number, b: number) => void;
export const privatekeygenerator_new: (a: number, b: number, c: number, d: bigint, e: number) => void;
export const privatekeygenerator_receiveKey: (a: number, b: number, c: number) => void;
export const privatekeygenerator_changeKey: (a: number, b: number, c: number) => void;
export const __wbg_derivationpath_free: (a: number, b: number) => void;
export const derivationpath_new: (a: number, b: number, c: number) => void;
export const derivationpath_isEmpty: (a: number) => number;
export const derivationpath_length: (a: number) => number;
export const derivationpath_parent: (a: number) => number;
export const derivationpath_push: (a: number, b: number, c: number, d: number) => void;
export const derivationpath_toString: (a: number, b: number) => void;
export const __wbg_pskt_free: (a: number, b: number) => void;
export const pskt_new: (a: number, b: number) => void;
export const pskt_role: (a: number, b: number) => void;
export const pskt_payload: (a: number) => number;
export const pskt_serialize: (a: number, b: number) => void;
export const pskt_creator: (a: number, b: number) => void;
export const pskt_toConstructor: (a: number, b: number) => void;
export const pskt_toUpdater: (a: number, b: number) => void;
export const pskt_toSigner: (a: number, b: number) => void;
export const pskt_toCombiner: (a: number, b: number) => void;
export const pskt_toFinalizer: (a: number, b: number) => void;
export const pskt_toExtractor: (a: number, b: number) => void;
export const pskt_fallbackLockTime: (a: number, b: number, c: bigint) => void;
export const pskt_inputsModifiable: (a: number, b: number) => void;
export const pskt_outputsModifiable: (a: number, b: number) => void;
export const pskt_noMoreInputs: (a: number, b: number) => void;
export const pskt_noMoreOutputs: (a: number, b: number) => void;
export const pskt_inputAndRedeemScript: (a: number, b: number, c: number, d: number) => void;
export const pskt_input: (a: number, b: number, c: number) => void;
export const pskt_output: (a: number, b: number, c: number) => void;
export const pskt_setSequence: (a: number, b: number, c: bigint, d: number) => void;
export const pskt_calculateId: (a: number, b: number) => void;
export const pskt_calculateMass: (a: number, b: number, c: number) => void;
export const __wbg_pskb_free: (a: number, b: number) => void;
export const pskb_new: (a: number) => void;
export const pskb_serialize: (a: number, b: number) => void;
export const pskb_displayFormat: (a: number, b: number, c: number) => void;
export const pskb_deserialize: (a: number, b: number, c: number) => void;
export const pskb_length: (a: number) => number;
export const pskb_add: (a: number, b: number, c: number) => void;
export const pskb_merge: (a: number, b: number) => void;
export const version: (a: number) => void;
export const __wbg_nodedescriptor_free: (a: number, b: number) => void;
export const __wbg_get_nodedescriptor_uid: (a: number, b: number) => void;
export const __wbg_set_nodedescriptor_uid: (a: number, b: number, c: number) => void;
export const __wbg_get_nodedescriptor_url: (a: number, b: number) => void;
export const __wbg_set_nodedescriptor_url: (a: number, b: number, c: number) => void;
export const rpcclient_getBlockCount: (a: number, b: number) => number;
export const rpcclient_getBlockDagInfo: (a: number, b: number) => number;
export const rpcclient_getCoinSupply: (a: number, b: number) => number;
export const rpcclient_getConnectedPeerInfo: (a: number, b: number) => number;
export const rpcclient_getInfo: (a: number, b: number) => number;
export const rpcclient_getPeerAddresses: (a: number, b: number) => number;
export const rpcclient_getMetrics: (a: number, b: number) => number;
export const rpcclient_getConnections: (a: number, b: number) => number;
export const rpcclient_getSink: (a: number, b: number) => number;
export const rpcclient_getSinkBlueScore: (a: number, b: number) => number;
export const rpcclient_ping: (a: number, b: number) => number;
export const rpcclient_shutdown: (a: number, b: number) => number;
export const rpcclient_getServerInfo: (a: number, b: number) => number;
export const rpcclient_getSyncStatus: (a: number, b: number) => number;
export const rpcclient_getFeeEstimate: (a: number, b: number) => number;
export const rpcclient_getCurrentNetwork: (a: number, b: number) => number;
export const rpcclient_addPeer: (a: number, b: number) => number;
export const rpcclient_ban: (a: number, b: number) => number;
export const rpcclient_estimateNetworkHashesPerSecond: (a: number, b: number) => number;
export const rpcclient_getBalanceByAddress: (a: number, b: number) => number;
export const rpcclient_getBalancesByAddresses: (a: number, b: number) => number;
export const rpcclient_getBlock: (a: number, b: number) => number;
export const rpcclient_getBlocks: (a: number, b: number) => number;
export const rpcclient_getBlockTemplate: (a: number, b: number) => number;
export const rpcclient_getCurrentBlockColor: (a: number, b: number) => number;
export const rpcclient_getDaaScoreTimestampEstimate: (a: number, b: number) => number;
export const rpcclient_getFeeEstimateExperimental: (a: number, b: number) => number;
export const rpcclient_getHeaders: (a: number, b: number) => number;
export const rpcclient_getMempoolEntries: (a: number, b: number) => number;
export const rpcclient_getMempoolEntriesByAddresses: (a: number, b: number) => number;
export const rpcclient_getMempoolEntry: (a: number, b: number) => number;
export const rpcclient_getSubnetwork: (a: number, b: number) => number;
export const rpcclient_getUtxosByAddresses: (a: number, b: number) => number;
export const rpcclient_getVirtualChainFromBlock: (a: number, b: number) => number;
export const rpcclient_resolveFinalityConflict: (a: number, b: number) => number;
export const rpcclient_submitBlock: (a: number, b: number) => number;
export const rpcclient_submitTransaction: (a: number, b: number) => number;
export const rpcclient_submitTransactionReplacement: (a: number, b: number) => number;
export const rpcclient_unban: (a: number, b: number) => number;
export const rpcclient_subscribeBlockAdded: (a: number) => number;
export const rpcclient_unsubscribeBlockAdded: (a: number) => number;
export const rpcclient_subscribeFinalityConflict: (a: number) => number;
export const rpcclient_unsubscribeFinalityConflict: (a: number) => number;
export const rpcclient_subscribeFinalityConflictResolved: (a: number) => number;
export const rpcclient_unsubscribeFinalityConflictResolved: (a: number) => number;
export const rpcclient_subscribeSinkBlueScoreChanged: (a: number) => number;
export const rpcclient_unsubscribeSinkBlueScoreChanged: (a: number) => number;
export const rpcclient_subscribePruningPointUtxoSetOverride: (a: number) => number;
export const rpcclient_unsubscribePruningPointUtxoSetOverride: (a: number) => number;
export const rpcclient_subscribeNewBlockTemplate: (a: number) => number;
export const rpcclient_unsubscribeNewBlockTemplate: (a: number) => number;
export const rpcclient_subscribeVirtualDaaScoreChanged: (a: number) => number;
export const rpcclient_unsubscribeVirtualDaaScoreChanged: (a: number) => number;
export const rpcclient_subscribeUtxosChanged: (a: number, b: number) => number;
export const rpcclient_unsubscribeUtxosChanged: (a: number, b: number) => number;
export const rpcclient_subscribeVirtualChainChanged: (a: number, b: number) => number;
export const rpcclient_unsubscribeVirtualChainChanged: (a: number, b: number) => number;
export const rpcclient_defaultPort: (a: number, b: number, c: number) => void;
export const rpcclient_parseUrl: (a: number, b: number, c: number, d: number, e: number) => void;
export const rpcclient_ctor: (a: number, b: number) => void;
export const rpcclient_url: (a: number, b: number) => void;
export const rpcclient_resolver: (a: number) => number;
export const rpcclient_setResolver: (a: number, b: number, c: number) => void;
export const rpcclient_setNetworkId: (a: number, b: number, c: number) => void;
export const rpcclient_isConnected: (a: number) => number;
export const rpcclient_encoding: (a: number, b: number) => void;
export const rpcclient_nodeId: (a: number, b: number) => void;
export const rpcclient_connect: (a: number, b: number) => number;
export const rpcclient_disconnect: (a: number) => number;
export const rpcclient_start: (a: number) => number;
export const rpcclient_stop: (a: number) => number;
export const rpcclient_triggerAbort: (a: number) => void;
export const rpcclient_addEventListener: (a: number, b: number, c: number, d: number) => void;
export const rpcclient_removeEventListener: (a: number, b: number, c: number, d: number) => void;
export const rpcclient_clearEventListener: (a: number, b: number, c: number) => void;
export const rpcclient_removeAllEventListeners: (a: number, b: number) => void;
export const __wbg_rpcclient_free: (a: number, b: number) => void;
export const resolver_urls: (a: number) => number;
export const resolver_getNode: (a: number, b: number, c: number) => number;
export const resolver_getUrl: (a: number, b: number, c: number) => number;
export const resolver_connect: (a: number, b: number) => number;
export const resolver_ctor: (a: number, b: number) => void;
export const __wbg_resolver_free: (a: number, b: number) => void;
export const writestream_add_listener_with_open: (a: number, b: number) => number;
export const writestream_add_listener_with_close: (a: number, b: number) => number;
export const writestream_on_with_open: (a: number, b: number) => number;
export const writestream_on_with_close: (a: number, b: number) => number;
export const writestream_once_with_open: (a: number, b: number) => number;
export const writestream_once_with_close: (a: number, b: number) => number;
export const writestream_prepend_listener_with_open: (a: number, b: number) => number;
export const writestream_prepend_listener_with_close: (a: number, b: number) => number;
export const writestream_prepend_once_listener_with_open: (a: number, b: number) => number;
export const writestream_prepend_once_listener_with_close: (a: number, b: number) => number;
export const __wbg_createhookcallbacks_free: (a: number, b: number) => void;
export const createhookcallbacks_new: (a: number, b: number, c: number, d: number, e: number) => number;
export const createhookcallbacks_init: (a: number) => number;
export const createhookcallbacks_set_init: (a: number, b: number) => void;
export const createhookcallbacks_before: (a: number) => number;
export const createhookcallbacks_set_before: (a: number, b: number) => void;
export const createhookcallbacks_after: (a: number) => number;
export const createhookcallbacks_set_after: (a: number, b: number) => void;
export const createhookcallbacks_destroy: (a: number) => number;
export const createhookcallbacks_set_destroy: (a: number, b: number) => void;
export const createhookcallbacks_promise_resolve: (a: number) => number;
export const createhookcallbacks_set_promise_resolve: (a: number, b: number) => void;
export const __wbg_streamtransformoptions_free: (a: number, b: number) => void;
export const streamtransformoptions_new: (a: number, b: number) => number;
export const streamtransformoptions_flush: (a: number) => number;
export const streamtransformoptions_set_flush: (a: number, b: number) => void;
export const streamtransformoptions_transform: (a: number) => number;
export const streamtransformoptions_set_transform: (a: number, b: number) => void;
export const __wbg_getnameoptions_free: (a: number, b: number) => void;
export const getnameoptions_new: (a: number, b: number, c: number, d: number) => number;
export const getnameoptions_family: (a: number) => number;
export const getnameoptions_set_family: (a: number, b: number) => void;
export const getnameoptions_host: (a: number) => number;
export const getnameoptions_set_host: (a: number, b: number) => void;
export const getnameoptions_local_address: (a: number) => number;
export const getnameoptions_set_local_address: (a: number, b: number) => void;
export const getnameoptions_port: (a: number) => number;
export const getnameoptions_set_port: (a: number, b: number) => void;
export const __wbg_pipeoptions_free: (a: number, b: number) => void;
export const pipeoptions_new: (a: number) => number;
export const pipeoptions_end: (a: number) => number;
export const pipeoptions_set_end: (a: number, b: number) => void;
export const __wbg_createwritestreamoptions_free: (a: number, b: number) => void;
export const createwritestreamoptions_new_with_values: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => number;
export const createwritestreamoptions_auto_close: (a: number) => number;
export const createwritestreamoptions_set_auto_close: (a: number, b: number) => void;
export const createwritestreamoptions_emit_close: (a: number) => number;
export const createwritestreamoptions_set_emit_close: (a: number, b: number) => void;
export const createwritestreamoptions_encoding: (a: number) => number;
export const createwritestreamoptions_set_encoding: (a: number, b: number) => void;
export const createwritestreamoptions_fd: (a: number) => number;
export const createwritestreamoptions_set_fd: (a: number, b: number) => void;
export const createwritestreamoptions_flags: (a: number) => number;
export const createwritestreamoptions_set_flags: (a: number, b: number) => void;
export const createwritestreamoptions_mode: (a: number) => number;
export const createwritestreamoptions_set_mode: (a: number, b: number) => void;
export const createwritestreamoptions_start: (a: number, b: number) => void;
export const createwritestreamoptions_set_start: (a: number, b: number, c: number) => void;
export const __wbg_netserveroptions_free: (a: number, b: number) => void;
export const netserveroptions_allow_half_open: (a: number) => number;
export const netserveroptions_set_allow_half_open: (a: number, b: number) => void;
export const netserveroptions_pause_on_connect: (a: number) => number;
export const __wbg_userinfooptions_free: (a: number, b: number) => void;
export const userinfooptions_new_with_values: (a: number) => number;
export const userinfooptions_new: () => number;
export const userinfooptions_encoding: (a: number) => number;
export const userinfooptions_set_encoding: (a: number, b: number) => void;
export const __wbg_writefilesyncoptions_free: (a: number, b: number) => void;
export const writefilesyncoptions_new: (a: number, b: number, c: number) => number;
export const writefilesyncoptions_encoding: (a: number) => number;
export const writefilesyncoptions_set_encoding: (a: number, b: number) => void;
export const writefilesyncoptions_flag: (a: number) => number;
export const writefilesyncoptions_set_flag: (a: number, b: number) => void;
export const writefilesyncoptions_mode: (a: number) => number;
export const writefilesyncoptions_set_mode: (a: number, b: number) => void;
export const netserveroptions_set_pause_on_connect: (a: number, b: number) => void;
export const __wbg_consoleconstructoroptions_free: (a: number, b: number) => void;
export const consoleconstructoroptions_new_with_values: (a: number, b: number, c: number, d: number, e: number) => number;
export const consoleconstructoroptions_new: (a: number, b: number) => number;
export const consoleconstructoroptions_stdout: (a: number) => number;
export const consoleconstructoroptions_set_stdout: (a: number, b: number) => void;
export const consoleconstructoroptions_stderr: (a: number) => number;
export const consoleconstructoroptions_set_stderr: (a: number, b: number) => void;
export const consoleconstructoroptions_ignore_errors: (a: number) => number;
export const consoleconstructoroptions_set_ignore_errors: (a: number, b: number) => void;
export const consoleconstructoroptions_color_mod: (a: number) => number;
export const consoleconstructoroptions_set_color_mod: (a: number, b: number) => void;
export const consoleconstructoroptions_inspect_options: (a: number) => number;
export const consoleconstructoroptions_set_inspect_options: (a: number, b: number) => void;
export const readstream_add_listener_with_open: (a: number, b: number) => number;
export const readstream_add_listener_with_close: (a: number, b: number) => number;
export const readstream_on_with_open: (a: number, b: number) => number;
export const readstream_on_with_close: (a: number, b: number) => number;
export const readstream_once_with_open: (a: number, b: number) => number;
export const readstream_once_with_close: (a: number, b: number) => number;
export const readstream_prepend_listener_with_open: (a: number, b: number) => number;
export const readstream_prepend_listener_with_close: (a: number, b: number) => number;
export const readstream_prepend_once_listener_with_open: (a: number, b: number) => number;
export const readstream_prepend_once_listener_with_close: (a: number, b: number) => number;
export const __wbg_appendfileoptions_free: (a: number, b: number) => void;
export const appendfileoptions_new_with_values: (a: number, b: number, c: number) => number;
export const appendfileoptions_new: () => number;
export const appendfileoptions_encoding: (a: number) => number;
export const appendfileoptions_set_encoding: (a: number, b: number) => void;
export const appendfileoptions_mode: (a: number) => number;
export const appendfileoptions_set_mode: (a: number, b: number) => void;
export const appendfileoptions_flag: (a: number) => number;
export const appendfileoptions_set_flag: (a: number, b: number) => void;
export const __wbg_formatinputpathobject_free: (a: number, b: number) => void;
export const formatinputpathobject_new_with_values: (a: number, b: number, c: number, d: number, e: number) => number;
export const formatinputpathobject_new: () => number;
export const formatinputpathobject_base: (a: number) => number;
export const formatinputpathobject_set_base: (a: number, b: number) => void;
export const formatinputpathobject_dir: (a: number) => number;
export const formatinputpathobject_set_dir: (a: number, b: number) => void;
export const formatinputpathobject_ext: (a: number) => number;
export const formatinputpathobject_set_ext: (a: number, b: number) => void;
export const formatinputpathobject_name: (a: number) => number;
export const formatinputpathobject_set_name: (a: number, b: number) => void;
export const formatinputpathobject_root: (a: number) => number;
export const formatinputpathobject_set_root: (a: number, b: number) => void;
export const __wbg_mkdtempsyncoptions_free: (a: number, b: number) => void;
export const mkdtempsyncoptions_new_with_values: (a: number) => number;
export const mkdtempsyncoptions_new: () => number;
export const mkdtempsyncoptions_encoding: (a: number) => number;
export const mkdtempsyncoptions_set_encoding: (a: number, b: number) => void;
export const __wbg_processsendoptions_free: (a: number, b: number) => void;
export const processsendoptions_new: (a: number) => number;
export const processsendoptions_swallow_errors: (a: number) => number;
export const processsendoptions_set_swallow_errors: (a: number, b: number) => void;
export const __wbg_assertionerroroptions_free: (a: number, b: number) => void;
export const assertionerroroptions_new: (a: number, b: number, c: number, d: number) => number;
export const assertionerroroptions_message: (a: number) => number;
export const assertionerroroptions_set_message: (a: number, b: number) => void;
export const assertionerroroptions_actual: (a: number) => number;
export const assertionerroroptions_set_actual: (a: number, b: number) => void;
export const assertionerroroptions_expected: (a: number) => number;
export const assertionerroroptions_set_expected: (a: number, b: number) => void;
export const assertionerroroptions_operator: (a: number) => number;
export const assertionerroroptions_set_operator: (a: number, b: number) => void;
export const __wbg_createreadstreamoptions_free: (a: number, b: number) => void;
export const createreadstreamoptions_new_with_values: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => number;
export const createreadstreamoptions_auto_close: (a: number) => number;
export const createreadstreamoptions_set_auto_close: (a: number, b: number) => void;
export const createreadstreamoptions_emit_close: (a: number) => number;
export const createreadstreamoptions_set_emit_close: (a: number, b: number) => void;
export const createreadstreamoptions_encoding: (a: number) => number;
export const createreadstreamoptions_set_encoding: (a: number, b: number) => void;
export const createreadstreamoptions_end: (a: number, b: number) => void;
export const createreadstreamoptions_set_end: (a: number, b: number, c: number) => void;
export const createreadstreamoptions_fd: (a: number) => number;
export const createreadstreamoptions_set_fd: (a: number, b: number) => void;
export const createreadstreamoptions_flags: (a: number) => number;
export const createreadstreamoptions_set_flags: (a: number, b: number) => void;
export const createreadstreamoptions_high_water_mark: (a: number, b: number) => void;
export const createreadstreamoptions_set_high_water_mark: (a: number, b: number, c: number) => void;
export const createreadstreamoptions_mode: (a: number) => number;
export const createreadstreamoptions_set_mode: (a: number, b: number) => void;
export const createreadstreamoptions_start: (a: number, b: number) => void;
export const createreadstreamoptions_set_start: (a: number, b: number, c: number) => void;
export const __wbg_setaadoptions_free: (a: number, b: number) => void;
export const setaadoptions_new: (a: number, b: number, c: number) => number;
export const setaadoptions_flush: (a: number) => number;
export const setaadoptions_set_flush: (a: number, b: number) => void;
export const setaadoptions_plaintextLength: (a: number) => number;
export const setaadoptions_set_plaintext_length: (a: number, b: number) => void;
export const setaadoptions_transform: (a: number) => number;
export const setaadoptions_set_transform: (a: number, b: number) => void;
export const __wbg_agentconstructoroptions_free: (a: number, b: number) => void;
export const agentconstructoroptions_keep_alive_msecs: (a: number) => number;
export const agentconstructoroptions_set_keep_alive_msecs: (a: number, b: number) => void;
export const agentconstructoroptions_keep_alive: (a: number) => number;
export const agentconstructoroptions_set_keep_alive: (a: number, b: number) => void;
export const agentconstructoroptions_max_free_sockets: (a: number) => number;
export const agentconstructoroptions_set_max_free_sockets: (a: number, b: number) => void;
export const agentconstructoroptions_max_sockets: (a: number) => number;
export const agentconstructoroptions_set_max_sockets: (a: number, b: number) => void;
export const agentconstructoroptions_timeout: (a: number) => number;
export const agentconstructoroptions_set_timeout: (a: number, b: number) => void;
export const __wbg_wasioptions_free: (a: number, b: number) => void;
export const wasioptions_new_with_values: (a: number, b: number, c: number, d: number) => number;
export const wasioptions_new: (a: number) => number;
export const wasioptions_args: (a: number, b: number) => void;
export const wasioptions_set_args: (a: number, b: number, c: number) => void;
export const wasioptions_env: (a: number) => number;
export const wasioptions_set_env: (a: number, b: number) => void;
export const wasioptions_preopens: (a: number) => number;
export const wasioptions_set_preopens: (a: number, b: number) => void;
export const rustsecp256k1_v0_10_0_context_create: (a: number) => number;
export const rustsecp256k1_v0_10_0_context_destroy: (a: number) => void;
export const rustsecp256k1_v0_10_0_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_10_0_default_error_callback_fn: (a: number, b: number) => void;
export const __wbg_aborted_free: (a: number, b: number) => void;
export const __wbg_abortable_free: (a: number, b: number) => void;
export const abortable_new: () => number;
export const abortable_isAborted: (a: number) => number;
export const abortable_abort: (a: number) => void;
export const abortable_check: (a: number, b: number) => void;
export const abortable_reset: (a: number) => void;
export const setLogLevel: (a: number) => void;
export const initWASM32Bindings: (a: number, b: number) => void;
export const initConsolePanicHook: () => void;
export const initBrowserPanicHook: () => void;
export const presentPanicHookLogs: () => void;
export const defer: () => number;
export const __wbindgen_export_0: (a: number) => void;
export const __wbindgen_export_1: (a: number, b: number) => number;
export const __wbindgen_export_2: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_3: (a: number, b: number, c: number) => void;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_add_to_stack_pointer: (a: number) => number;
export const __wbindgen_export_5: (a: number, b: number) => void;
export const __wbindgen_export_6: (a: number, b: number, c: number) => void;
export const __wbindgen_export_7: (a: number, b: number) => void;
export const __wbindgen_export_8: (a: number, b: number, c: number, d: number) => void;
export const __wbindgen_export_9: (a: number, b: number, c: number) => void;
export const __wbindgen_export_10: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_11: (a: number, b: number, c: number) => void;
export const __wbindgen_export_12: (a: number, b: number, c: number) => void;
export const __wbindgen_export_13: (a: number, b: number, c: number, d: number) => void;
