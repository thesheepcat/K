/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_address_free: (a: number, b: number) => void;
export const address_constructor: (a: number, b: number) => number;
export const address_validate: (a: number, b: number) => number;
export const address_toString: (a: number, b: number) => void;
export const address_version: (a: number, b: number) => void;
export const address_prefix: (a: number, b: number) => void;
export const address_set_setPrefix: (a: number, b: number, c: number) => void;
export const address_payload: (a: number, b: number) => void;
export const address_short: (a: number, b: number, c: number) => void;
export const __wbg_transactionoutpoint_free: (a: number, b: number) => void;
export const transactionoutpoint_ctor: (a: number, b: number) => number;
export const transactionoutpoint_getId: (a: number, b: number) => void;
export const transactionoutpoint_transactionId: (a: number, b: number) => void;
export const transactionoutpoint_index: (a: number) => number;
export const __wbg_transaction_free: (a: number, b: number) => void;
export const transaction_is_coinbase: (a: number) => number;
export const transaction_finalize: (a: number, b: number) => void;
export const transaction_id: (a: number, b: number) => void;
export const transaction_constructor: (a: number, b: number) => void;
export const transaction_get_inputs_as_js_array: (a: number) => number;
export const transaction_addresses: (a: number, b: number, c: number) => void;
export const transaction_set_inputs_from_js_array: (a: number, b: number) => void;
export const transaction_get_outputs_as_js_array: (a: number) => number;
export const transaction_set_outputs_from_js_array: (a: number, b: number) => void;
export const transaction_version: (a: number) => number;
export const transaction_set_version: (a: number, b: number) => void;
export const transaction_lockTime: (a: number) => bigint;
export const transaction_set_lockTime: (a: number, b: bigint) => void;
export const transaction_gas: (a: number) => bigint;
export const transaction_set_gas: (a: number, b: bigint) => void;
export const transaction_get_subnetwork_id_as_hex: (a: number, b: number) => void;
export const transaction_set_subnetwork_id_from_js_value: (a: number, b: number) => void;
export const transaction_get_payload_as_hex_string: (a: number, b: number) => void;
export const transaction_set_payload_from_js_value: (a: number, b: number) => void;
export const transaction_get_mass: (a: number) => bigint;
export const transaction_set_mass: (a: number, b: bigint) => void;
export const transaction_serializeToObject: (a: number, b: number) => void;
export const transaction_serializeToJSON: (a: number, b: number) => void;
export const transaction_serializeToSafeJSON: (a: number, b: number) => void;
export const transaction_deserializeFromObject: (a: number, b: number) => void;
export const transaction_deserializeFromJSON: (a: number, b: number, c: number) => void;
export const transaction_deserializeFromSafeJSON: (a: number, b: number, c: number) => void;
export const isScriptPayToScriptHash: (a: number, b: number) => void;
export const isScriptPayToPubkeyECDSA: (a: number, b: number) => void;
export const isScriptPayToPubkey: (a: number, b: number) => void;
export const addressFromScriptPublicKey: (a: number, b: number, c: number) => void;
export const payToScriptHashSignatureScript: (a: number, b: number, c: number) => void;
export const payToScriptHashScript: (a: number, b: number) => void;
export const payToAddressScript: (a: number, b: number) => void;
export const transactionsigninghashecdsa_new: () => number;
export const transactionsigninghashecdsa_update: (a: number, b: number, c: number) => void;
export const transactionsigninghashecdsa_finalize: (a: number, b: number) => void;
export const __wbg_transactionsigninghashecdsa_free: (a: number, b: number) => void;
export const transactionsigninghash_new: () => number;
export const transactionsigninghash_update: (a: number, b: number, c: number) => void;
export const transactionsigninghash_finalize: (a: number, b: number) => void;
export const __wbg_transactionsigninghash_free: (a: number, b: number) => void;
export const header_constructor: (a: number, b: number) => void;
export const header_finalize: (a: number, b: number) => void;
export const header_asJSON: (a: number, b: number) => void;
export const header_get_version: (a: number) => number;
export const header_set_version: (a: number, b: number) => void;
export const header_get_timestamp: (a: number) => bigint;
export const header_set_timestamp: (a: number, b: bigint) => void;
export const header_bits: (a: number) => number;
export const header_set_bits: (a: number, b: number) => void;
export const header_nonce: (a: number) => bigint;
export const header_set_nonce: (a: number, b: bigint) => void;
export const header_daa_score: (a: number) => bigint;
export const header_set_daa_score: (a: number, b: bigint) => void;
export const header_blue_score: (a: number) => bigint;
export const header_set_blue_score: (a: number, b: bigint) => void;
export const header_get_hash_as_hex: (a: number, b: number) => void;
export const header_get_hash_merkle_root_as_hex: (a: number, b: number) => void;
export const header_set_hash_merkle_root_from_js_value: (a: number, b: number) => void;
export const header_get_accepted_id_merkle_root_as_hex: (a: number, b: number) => void;
export const header_set_accepted_id_merkle_root_from_js_value: (a: number, b: number) => void;
export const header_get_utxo_commitment_as_hex: (a: number, b: number) => void;
export const header_set_utxo_commitment_from_js_value: (a: number, b: number) => void;
export const header_get_pruning_point_as_hex: (a: number, b: number) => void;
export const header_set_pruning_point_from_js_value: (a: number, b: number) => void;
export const header_get_parents_by_level_as_js_value: (a: number) => number;
export const header_set_parents_by_level_from_js_value: (a: number, b: number) => void;
export const header_blue_work: (a: number) => number;
export const header_getBlueWorkAsHex: (a: number, b: number) => void;
export const header_set_blue_work_from_js_value: (a: number, b: number) => void;
export const __wbg_header_free: (a: number, b: number) => void;
export const __wbg_utxoentry_free: (a: number, b: number) => void;
export const __wbg_get_utxoentry_address: (a: number) => number;
export const __wbg_set_utxoentry_address: (a: number, b: number) => void;
export const __wbg_get_utxoentry_outpoint: (a: number) => number;
export const __wbg_set_utxoentry_outpoint: (a: number, b: number) => void;
export const __wbg_get_utxoentry_amount: (a: number) => bigint;
export const __wbg_set_utxoentry_amount: (a: number, b: bigint) => void;
export const __wbg_get_utxoentry_scriptPublicKey: (a: number) => number;
export const __wbg_set_utxoentry_scriptPublicKey: (a: number, b: number) => void;
export const __wbg_get_utxoentry_blockDaaScore: (a: number) => bigint;
export const __wbg_set_utxoentry_blockDaaScore: (a: number, b: bigint) => void;
export const __wbg_get_utxoentry_isCoinbase: (a: number) => number;
export const __wbg_set_utxoentry_isCoinbase: (a: number, b: number) => void;
export const utxoentry_toString: (a: number, b: number) => void;
export const __wbg_utxoentryreference_free: (a: number, b: number) => void;
export const utxoentryreference_toString: (a: number, b: number) => void;
export const utxoentryreference_entry: (a: number) => number;
export const utxoentryreference_outpoint: (a: number) => number;
export const utxoentryreference_address: (a: number) => number;
export const utxoentryreference_amount: (a: number) => bigint;
export const utxoentryreference_isCoinbase: (a: number) => number;
export const utxoentryreference_blockDaaScore: (a: number) => bigint;
export const utxoentryreference_scriptPublicKey: (a: number) => number;
export const __wbg_utxoentries_free: (a: number, b: number) => void;
export const utxoentries_js_ctor: (a: number, b: number) => void;
export const utxoentries_get_items_as_js_array: (a: number) => number;
export const utxoentries_set_items_from_js_array: (a: number, b: number) => void;
export const utxoentries_sort: (a: number) => void;
export const utxoentries_amount: (a: number) => bigint;
export const __wbg_transactionoutput_free: (a: number, b: number) => void;
export const transactionoutput_ctor: (a: bigint, b: number) => number;
export const transactionoutput_value: (a: number) => bigint;
export const transactionoutput_set_value: (a: number, b: bigint) => void;
export const transactionoutput_scriptPublicKey: (a: number) => number;
export const transactionoutput_set_scriptPublicKey: (a: number, b: number) => void;
export const __wbg_transactioninput_free: (a: number, b: number) => void;
export const transactioninput_constructor: (a: number, b: number) => void;
export const transactioninput_get_previous_outpoint: (a: number) => number;
export const transactioninput_set_previous_outpoint: (a: number, b: number, c: number) => void;
export const transactioninput_get_signature_script_as_hex: (a: number, b: number) => void;
export const transactioninput_set_signature_script_from_js_value: (a: number, b: number, c: number) => void;
export const transactioninput_get_sequence: (a: number) => bigint;
export const transactioninput_set_sequence: (a: number, b: bigint) => void;
export const transactioninput_get_sig_op_count: (a: number) => number;
export const transactioninput_set_sig_op_count: (a: number, b: number) => void;
export const transactioninput_get_utxo: (a: number) => number;
export const __wbg_networkid_free: (a: number, b: number) => void;
export const __wbg_get_networkid_type: (a: number) => number;
export const __wbg_set_networkid_type: (a: number, b: number) => void;
export const __wbg_get_networkid_suffix: (a: number) => number;
export const __wbg_set_networkid_suffix: (a: number, b: number) => void;
export const networkid_ctor: (a: number, b: number) => void;
export const networkid_id: (a: number, b: number) => void;
export const networkid_addressPrefix: (a: number, b: number) => void;
export const networkid_toString: (a: number, b: number) => void;
export const __wbg_transactionutxoentry_free: (a: number, b: number) => void;
export const __wbg_get_transactionutxoentry_amount: (a: number) => bigint;
export const __wbg_set_transactionutxoentry_amount: (a: number, b: bigint) => void;
export const __wbg_get_transactionutxoentry_scriptPublicKey: (a: number) => number;
export const __wbg_set_transactionutxoentry_scriptPublicKey: (a: number, b: number) => void;
export const __wbg_get_transactionutxoentry_blockDaaScore: (a: number) => bigint;
export const __wbg_set_transactionutxoentry_blockDaaScore: (a: number, b: bigint) => void;
export const __wbg_get_transactionutxoentry_isCoinbase: (a: number) => number;
export const __wbg_set_transactionutxoentry_isCoinbase: (a: number, b: number) => void;
export const __wbg_sighashtype_free: (a: number, b: number) => void;
export const __wbg_scriptpublickey_free: (a: number, b: number) => void;
export const __wbg_get_scriptpublickey_version: (a: number) => number;
export const __wbg_set_scriptpublickey_version: (a: number, b: number) => void;
export const scriptpublickey_constructor: (a: number, b: number, c: number) => void;
export const scriptpublickey_script_as_hex: (a: number, b: number) => void;
export const __wbg_hash_free: (a: number, b: number) => void;
export const hash_constructor: (a: number, b: number) => number;
export const hash_toString: (a: number, b: number) => void;
export const version: (a: number) => void;
export const __wbg_nodedescriptor_free: (a: number, b: number) => void;
export const __wbg_get_nodedescriptor_uid: (a: number, b: number) => void;
export const __wbg_set_nodedescriptor_uid: (a: number, b: number, c: number) => void;
export const __wbg_get_nodedescriptor_url: (a: number, b: number) => void;
export const __wbg_set_nodedescriptor_url: (a: number, b: number, c: number) => void;
export const rpcclient_getBlockCount: (a: number, b: number) => number;
export const rpcclient_getBlockDagInfo: (a: number, b: number) => number;
export const rpcclient_getCoinSupply: (a: number, b: number) => number;
export const rpcclient_getConnectedPeerInfo: (a: number, b: number) => number;
export const rpcclient_getInfo: (a: number, b: number) => number;
export const rpcclient_getPeerAddresses: (a: number, b: number) => number;
export const rpcclient_getMetrics: (a: number, b: number) => number;
export const rpcclient_getConnections: (a: number, b: number) => number;
export const rpcclient_getSink: (a: number, b: number) => number;
export const rpcclient_getSinkBlueScore: (a: number, b: number) => number;
export const rpcclient_ping: (a: number, b: number) => number;
export const rpcclient_shutdown: (a: number, b: number) => number;
export const rpcclient_getServerInfo: (a: number, b: number) => number;
export const rpcclient_getSyncStatus: (a: number, b: number) => number;
export const rpcclient_getFeeEstimate: (a: number, b: number) => number;
export const rpcclient_getCurrentNetwork: (a: number, b: number) => number;
export const rpcclient_addPeer: (a: number, b: number) => number;
export const rpcclient_ban: (a: number, b: number) => number;
export const rpcclient_estimateNetworkHashesPerSecond: (a: number, b: number) => number;
export const rpcclient_getBalanceByAddress: (a: number, b: number) => number;
export const rpcclient_getBalancesByAddresses: (a: number, b: number) => number;
export const rpcclient_getBlock: (a: number, b: number) => number;
export const rpcclient_getBlocks: (a: number, b: number) => number;
export const rpcclient_getBlockTemplate: (a: number, b: number) => number;
export const rpcclient_getCurrentBlockColor: (a: number, b: number) => number;
export const rpcclient_getDaaScoreTimestampEstimate: (a: number, b: number) => number;
export const rpcclient_getFeeEstimateExperimental: (a: number, b: number) => number;
export const rpcclient_getHeaders: (a: number, b: number) => number;
export const rpcclient_getMempoolEntries: (a: number, b: number) => number;
export const rpcclient_getMempoolEntriesByAddresses: (a: number, b: number) => number;
export const rpcclient_getMempoolEntry: (a: number, b: number) => number;
export const rpcclient_getSubnetwork: (a: number, b: number) => number;
export const rpcclient_getUtxosByAddresses: (a: number, b: number) => number;
export const rpcclient_getVirtualChainFromBlock: (a: number, b: number) => number;
export const rpcclient_resolveFinalityConflict: (a: number, b: number) => number;
export const rpcclient_submitBlock: (a: number, b: number) => number;
export const rpcclient_submitTransaction: (a: number, b: number) => number;
export const rpcclient_submitTransactionReplacement: (a: number, b: number) => number;
export const rpcclient_unban: (a: number, b: number) => number;
export const rpcclient_subscribeBlockAdded: (a: number) => number;
export const rpcclient_unsubscribeBlockAdded: (a: number) => number;
export const rpcclient_subscribeFinalityConflict: (a: number) => number;
export const rpcclient_unsubscribeFinalityConflict: (a: number) => number;
export const rpcclient_subscribeFinalityConflictResolved: (a: number) => number;
export const rpcclient_unsubscribeFinalityConflictResolved: (a: number) => number;
export const rpcclient_subscribeSinkBlueScoreChanged: (a: number) => number;
export const rpcclient_unsubscribeSinkBlueScoreChanged: (a: number) => number;
export const rpcclient_subscribePruningPointUtxoSetOverride: (a: number) => number;
export const rpcclient_unsubscribePruningPointUtxoSetOverride: (a: number) => number;
export const rpcclient_subscribeNewBlockTemplate: (a: number) => number;
export const rpcclient_unsubscribeNewBlockTemplate: (a: number) => number;
export const rpcclient_subscribeVirtualDaaScoreChanged: (a: number) => number;
export const rpcclient_unsubscribeVirtualDaaScoreChanged: (a: number) => number;
export const rpcclient_subscribeUtxosChanged: (a: number, b: number) => number;
export const rpcclient_unsubscribeUtxosChanged: (a: number, b: number) => number;
export const rpcclient_subscribeVirtualChainChanged: (a: number, b: number) => number;
export const rpcclient_unsubscribeVirtualChainChanged: (a: number, b: number) => number;
export const rpcclient_defaultPort: (a: number, b: number, c: number) => void;
export const rpcclient_parseUrl: (a: number, b: number, c: number, d: number, e: number) => void;
export const rpcclient_ctor: (a: number, b: number) => void;
export const rpcclient_url: (a: number, b: number) => void;
export const rpcclient_resolver: (a: number) => number;
export const rpcclient_setResolver: (a: number, b: number, c: number) => void;
export const rpcclient_setNetworkId: (a: number, b: number, c: number) => void;
export const rpcclient_isConnected: (a: number) => number;
export const rpcclient_encoding: (a: number, b: number) => void;
export const rpcclient_nodeId: (a: number, b: number) => void;
export const rpcclient_connect: (a: number, b: number) => number;
export const rpcclient_disconnect: (a: number) => number;
export const rpcclient_start: (a: number) => number;
export const rpcclient_stop: (a: number) => number;
export const rpcclient_triggerAbort: (a: number) => void;
export const rpcclient_addEventListener: (a: number, b: number, c: number, d: number) => void;
export const rpcclient_removeEventListener: (a: number, b: number, c: number, d: number) => void;
export const rpcclient_clearEventListener: (a: number, b: number, c: number) => void;
export const rpcclient_removeAllEventListeners: (a: number, b: number) => void;
export const __wbg_rpcclient_free: (a: number, b: number) => void;
export const resolver_urls: (a: number) => number;
export const resolver_getNode: (a: number, b: number, c: number) => number;
export const resolver_getUrl: (a: number, b: number, c: number) => number;
export const resolver_connect: (a: number, b: number) => number;
export const resolver_ctor: (a: number, b: number) => void;
export const __wbg_resolver_free: (a: number, b: number) => void;
export const rustsecp256k1_v0_10_0_context_create: (a: number) => number;
export const rustsecp256k1_v0_10_0_context_destroy: (a: number) => void;
export const rustsecp256k1_v0_10_0_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_10_0_default_error_callback_fn: (a: number, b: number) => void;
export const __wbg_aborted_free: (a: number, b: number) => void;
export const __wbg_abortable_free: (a: number, b: number) => void;
export const abortable_new: () => number;
export const abortable_isAborted: (a: number) => number;
export const abortable_abort: (a: number) => void;
export const abortable_check: (a: number, b: number) => void;
export const abortable_reset: (a: number) => void;
export const setLogLevel: (a: number) => void;
export const initWASM32Bindings: (a: number, b: number) => void;
export const initConsolePanicHook: () => void;
export const initBrowserPanicHook: () => void;
export const presentPanicHookLogs: () => void;
export const defer: () => number;
export const __wbindgen_export_0: (a: number) => void;
export const __wbindgen_export_1: (a: number, b: number) => number;
export const __wbindgen_export_2: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_3: (a: number, b: number, c: number) => void;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_add_to_stack_pointer: (a: number) => number;
export const __wbindgen_export_5: (a: number, b: number) => void;
export const __wbindgen_export_6: (a: number, b: number, c: number) => void;
export const __wbindgen_export_7: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_8: (a: number, b: number, c: number) => void;
export const __wbindgen_export_9: (a: number, b: number, c: number) => void;
export const __wbindgen_export_10: (a: number, b: number, c: number, d: number) => void;
