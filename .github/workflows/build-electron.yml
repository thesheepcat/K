name: Build Electron App

on:
  push:
    branches:
      - dev
      - standalone-app-desktop

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        run: npm run build

      - name: Build Electron app (deb)
        run: npm run electron:build:deb

      - name: Build Electron app (AppImage)
        run: npm run electron:build:appimage

      - name: Upload deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: k-linux-deb
          path: build/*.deb
          retention-days: 30

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: k-linux-appimage
          path: build/*.AppImage
          retention-days: 30

      - name: Upload build summary
        if: always()
        run: |
          echo "## Linux Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Generated Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          ls -lh build/*.deb build/*.AppImage 2>/dev/null || echo "No artifacts found" >> $GITHUB_STEP_SUMMARY

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        run: npm run build

      - name: Build Electron app (Windows)
        run: npm run electron:build:win

      - name: Upload Windows installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: k-windows-x64
          path: build/*.exe
          retention-days: 30

      - name: Upload build summary
        if: always()
        shell: bash
        run: |
          echo "## Windows Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Generated Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          ls -lh build/*.exe 2>/dev/null || echo "No artifacts found" >> $GITHUB_STEP_SUMMARY
